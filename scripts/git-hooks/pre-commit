#!/bin/sh

go mod tidy
if [ $? != 0 ]; then
    echo >&2 "go mod tidy failed"
    exit 1
fi
git add go.mod
git add go.sum

# format golang files

swag fmt

STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=d | grep ".go$")

for FILE in $STAGED_GO_FILES
do
    goimports -w $FILE
    if [ $? != 0 ]; then
        echo >&2 "goimports failed"
        exit 1
    fi

    gofumpt -w $FILE
    if [ $? != 0 ]; then
        echo >&2 "gofumpt failed"
        exit 1
    fi

    tagalign -fix -sort -order "gorm,json,binding" -strict $FILE

    gci write --custom-order -s standard -s localmodule -s default $FILE

    git add $FILE
done

# golangci-lint check

golangci-lint run

if [ $? != 0 ]; then
    echo >&2 "golangci-lint failed"
    exit 1
fi


# go test

CONTAINS_CHAT=false
for FILE in $STAGED_GO_FILES
do
    if [[ $FILE == *"app/service/chat"* ]]; then
        CONTAINS_CHAT=true
        break
    fi
done

if [ "$CONTAINS_CHAT" = false ]; then
    export DISABLE_TEST_CHAT=true
fi

go test -v ./...

if [ $? != 0 ]; then
    echo >&2 "go test failed"
    exit 1
fi

exit 0